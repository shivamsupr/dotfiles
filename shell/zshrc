# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export TERM="xterm-256color"

export ZSH=~/.oh-my-zsh

ZSH_CUSTOM=$HOME/dotfiles/zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/ro/bbyrussell/oh-my-zsh/wiki/Themes

# powerlevel9k prompt theme
source $ZSH_CUSTOM/themes/powerlevel.sh

# # zsh-syntax-highlighting
# source $ZSH_CUSTOM/plugins/zshhighlight.sh

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git pip python brew osx zsh-syntax-highlighting zsh-autosuggestions yarn-autocompletions forgit docker docker-compose)

# source $ohmyzsh/oh-my-zsh.sh
source $ZSH/oh-my-zsh.sh

# User configuration
# export EDITOR="/usr/bin/vim"
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-11.0.1.jdk/Contents/Home
export ANDROID_HOME=${HOME}/Library/Android/sdk
export GRADLE_HOME="/usr/share/gradle"
export GOPATH=${HOME}/workspaces/go

export GOPATH=${HOME}/projects/go
export CARGO_HOME=$HOME/.cargo

# If directory exists they will be added to the path env variable
declare -a dir_path
dir_path=(
  "$HOME/dotfiles/bin"
  "$HOME/.local/bin"
  "/usr/local/go/bin"
  "$GOPATH/bin"
  "$HOME/.rbenv/bin"
  "$HOME/.rbenv/plugins/ruby-build/bin"
  "$JAVA_HOME/bin"
  "$ANDROID_HOME/build-tools"
  "$ANDROID_HOME/tools"
  "$ANDROID_HOME/tools/bin"
  "$HOME/Bundletool"
  "$ANDROID_HOME/emulator"
  "$ANDROID_HOME/platform-tools"
  "$GRADLE_HOME/bin"
  "/Applications/CMake.app/Contents/bin"
)

for dir in ${(k)dir_path[@]}
do
  if [ -d ${dir} ]; then
    PATH="$PATH:${dir}"
  fi
done

unset dir_path

export PATH
eval "$(rbenv init -)"

source /usr/local/share/autojump/autojump.zsh
source $HOME/.nvm/nvm.sh

# fzf config
export FZF_DEFAULT_COMMAND='fd --type file --hidden --follow --exclude .git'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
 --color=fg:#C6C8D1,bg:#161821,hl:#89b8c2
 --color=fg+:#d2d4de,bg+:#262626,hl+:#95c4ce
 --color=info:#b4be82,prompt:#e27878,pointer:#a093c7
 --color=marker:#c0ca8e,spinner:#ada0d3,header:#84a0c6
'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


export RIPGREP_CONFIG_PATH=~/.ripgreprc

export LS_COLORS="$(vivid generate ayu)"

export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# Auto change node version with .nvmrc
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc


# Load the shell dotfiles
for file in $HOME/dotfiles/shell/{shell_aliases,shell_functions}; do
  [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

# Load the shell dotfiles
for file in $HOME/dotfiles/shell/work/{work_aliases,work_functions}; do
  [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;


# You may need to manually set your language environment
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /Users/shivamr/.nvm/versions/node/v10.13.0/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /Users/shivamr/.nvm/versions/node/v10.13.0/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /Users/shivamr/.nvm/versions/node/v10.13.0/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /Users/shivamr/.nvm/versions/node/v10.13.0/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh
# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /Users/shivamr/.nvm/versions/node/v10.13.0/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh ]] && . /Users/shivamr/.nvm/versions/node/v10.13.0/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh


# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


#for ctrl+s to work with vim

stty stop undef
stty start undef

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
export PATH="/usr/local/sbin:$PATH"
